{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/idb/lib/idb.js","webpack:///./src/js/Currency.js","webpack:///./src/js/CurrencyService.js","webpack:///./src/js/DomHelper.js","webpack:///./src/js/LocalStorageService.js","webpack:///./src/js/config.js","webpack:///./src/js/index.js"],"names":["Currency","id","currencySymbol","currencyName","ONE_HOUR_IN_MS","CurrencyService","localStorageService","getAllCurrencies","then","currencies","length","Promise","resolve","fetchCurrenciesFromRemote","fetch","LIST_CURRENCIES_API_URL","fetchResponse","json","results","Object","values","forEach","value","currency","saveCurrency","push","fromCurrency","toCurrency","currentValue","conversionQuery","reverseConversionQuery","findConversionRate","Date","getTime","dateCreated","rate","convertCurrenciesFromRemote","requestUrl","CONVERT_CURRENCIES_API_URL","COMPACT_QUEARY_PARAM","response","saveConversionRate","result","DomHelper","document","getElementById","type","createElement","element","listener","onclick","options","data","textKey","valueKey","clearOptions","innerHTML","datum","opt","appendChild","LocalStorageService","idb","open","DATABASE_NAME","upgradeDB","oldVersion","createObjectStore","CURRENCIES_STORE_NAME","keyPath","CONVERSION_RATES_STORE_NAME","db","tx","transaction","IDB_TRANSACTION_TYPE_READ_WRITE","currencyStore","objectStore","put","complete","IDB_TRANSACTION_TYPE_READ_ONLY","getAll","coversionString","conversionRate","conversionStore","conversionDbObject","get","API_URL","FROM_CURRENCY_VALUE_INPUT_ID","FROM_CURRENCY_SELECT_ID","CONVERT_BUTTON_ID","TO_CURRENCY_VALUE_INPUT_ID","TO_CURRENCY_SELECT_ID","fetchingListOfCurrencies","listOfCurrenciesFetched","selectOptions","sort","c1","c2","trim","domHelper","populateSelectInput","getListOfCurrenciesFailed","error","console","registerServiceWorker","navigator","serviceWorker","register","scope","log","reg","catch","main","currencyService","getListOfCurrencies","addOnClickEventListener","getInputValue","convert","setInputValue"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAEA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;IC3ToBA,Q,GACjB,kBAAYC,EAAZ,EAAgBC,cAAhB,EAAgCC,YAAhC,EAA6C;AAAA;;AACzC,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACH,C;;kBALgBH,Q;;;;;;;;;;;;;;;;;;;;ACArB;;AACA;;;;AACA;;;;;;;;AAGA,IAAMI,iBAAiB,KAAK,EAAL,GAAU,IAAjC;;IAEqBC,e;;;;;;;8CAEW;AAAA;;AACxB,mBAAOC,8BAAoBC,gBAApB,GAAuCC,IAAvC,CAA4C,sBAAc;AAC7D,oBAAGC,cAAc,MAAMA,WAAWC,MAAlC,EACI,OAAO,IAAIC,OAAJ,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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/index.js\");\n","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","export default class Currency {\n    constructor(id, currencySymbol, currencyName){\n        this.id = id;\n        this.currencySymbol = currencySymbol;\n        this.currencyName = currencyName;\n    }\n}","import { LIST_CURRENCIES_API_URL, CONVERT_CURRENCIES_API_URL, COMPACT_QUEARY_PARAM } from './config';\nimport Currency from './Currency';\nimport localStorageService from './LocalStorageService';\n\n\nconst ONE_HOUR_IN_MS = 60 * 60 * 1000;\n\nexport default class CurrencyService {\n    \n    static getListOfCurrencies(){\n        return localStorageService.getAllCurrencies().then(currencies => {\n            if(currencies && 0 !== currencies.length)\n                return new Promise(resolve => resolve(currencies)) //TODO: again is this the best way to do this\n\n            return this.fetchCurrenciesFromRemote()\n        })\n    }\n\n    static fetchCurrenciesFromRemote(){\n        return fetch(LIST_CURRENCIES_API_URL)\n                    .then((fetchResponse) =>  fetchResponse.json())\n                    .then(json => {\n                        let results = []\n                        \n                        Object.values(json.results).forEach((value) => {\n                            //TODO: find out if this is the best way to pass currencies (we could pass them as is)\n                            let currency = new Currency(value.id, value.currencySymbol, value.currencyName);\n                            localStorageService.saveCurrency(currency);\n                            results.push(currency);\n                        })\n                        return results;\n                    });\n    }\n\n    static convert(fromCurrency, toCurrency, currentValue){\n       \n        let conversionQuery = `${fromCurrency}_${toCurrency}`\n        let reverseConversionQuery = `${toCurrency}_${fromCurrency}`\n        \n        return localStorageService.findConversionRate(conversionQuery).then(currency =>{\n                //b/c the server refreshes prices every one hour\n                if(currency && (new Date().getTime() - currency.dateCreated) < ONE_HOUR_IN_MS)\n                    return currency.rate * currentValue\n                 \n                return this.convertCurrenciesFromRemote(conversionQuery, reverseConversionQuery, currentValue)\n        })\n\n    }\n\n    static convertCurrenciesFromRemote(conversionQuery, reverseConversionQuery, currentValue){\n        let requestUrl = `${CONVERT_CURRENCIES_API_URL}?q=${conversionQuery},${reverseConversionQuery}&${COMPACT_QUEARY_PARAM}`\n\n        return fetch(requestUrl)\n                .then(response => response.json())\n                .then(json => {\n                    localStorageService.saveConversionRate(conversionQuery, json[conversionQuery])\n                    localStorageService.saveConversionRate(reverseConversionQuery, json[reverseConversionQuery])\n\n                    let result = json[conversionQuery]\n                    return result * currentValue\n                })\n    }\n}","\nexport default class DomHelper {\n    static getElementById(id){\n        return document.getElementById(id);\n    }\n    \n    static createElement(type){\n        return document.createElement(type);\n    }\n    \n    static addOnClickEventListener(element, listener){\n        element.onclick = listener\n    }\n    \n    static getInputValue(element){\n        return element.value\n    }\n    \n    static setInputValue(element, value){\n        element.value = value\n    }\n    \n    static populateSelectInput(element, options){\n        let {data, textKey, valueKey, clearOptions} = options\n        \n        if(clearOptions === true)\n            element.innerHTML = ''\n\n        Object.values(data).forEach((datum) => {\n            var opt = this.createElement('option');\n            opt.value = datum[valueKey];\n            opt.innerHTML = datum[textKey];\n            element.appendChild(opt);\n        })\n    }\n    \n}","import idb from 'idb';\nimport {DATABASE_NAME, CURRENCIES_STORE_NAME, CONVERSION_RATES_STORE_NAME,\n        IDB_TRANSACTION_TYPE_READ_WRITE, IDB_TRANSACTION_TYPE_READ_ONLY } from './config';\n\nexport default class LocalStorageService {\n    \n    static open(){\n         return idb.open(DATABASE_NAME, 1, upgradeDB => {\n            //TODO: use key path\n            switch (upgradeDB.oldVersion) {\n              case 0:\n                upgradeDB.createObjectStore(CURRENCIES_STORE_NAME, {keyPath: 'id'});\n                upgradeDB.createObjectStore(CONVERSION_RATES_STORE_NAME);\n                   \n            }\n        })\n    }\n\n    static saveCurrency(currency, db = null){\n         \n        return (db ? db : this.open()).then(db => {\n                let tx = db.transaction(CURRENCIES_STORE_NAME, IDB_TRANSACTION_TYPE_READ_WRITE)\n                let currencyStore = tx.objectStore(CURRENCIES_STORE_NAME)\n                currencyStore.put(currency)\n                return tx.complete\n            })\n    }\n\n    static getAllCurrencies(db = null){\n        \n        return (db ? db : this.open()).then(db => {\n            let tx = db.transaction(CURRENCIES_STORE_NAME, IDB_TRANSACTION_TYPE_READ_ONLY)\n            let currencyStore = tx.objectStore(CURRENCIES_STORE_NAME)\n            return currencyStore.getAll();\n        })\n    }\n\n    static saveConversionRate(coversionString, conversionRate, db = null){\n        \n        return (db ? db : this.open()).then(db => {\n                let tx = db.transaction(CONVERSION_RATES_STORE_NAME, IDB_TRANSACTION_TYPE_READ_WRITE)\n                let conversionStore = tx.objectStore(CONVERSION_RATES_STORE_NAME)\n\n                let conversionDbObject = {dateCreated: new Date(), rate: conversionRate, id: coversionString}\n                conversionStore.put(conversionDbObject, conversionDbObject.id)\n\n                return tx.complete\n            })\n    }\n\n    static findConversionRate(coversionString, db = null){\n        \n        return (db ? db : this.open()).then(db => {\n                let tx = db.transaction(CONVERSION_RATES_STORE_NAME, IDB_TRANSACTION_TYPE_READ_ONLY)\n                let conversionStore = tx.objectStore(CONVERSION_RATES_STORE_NAME)\n\n                return conversionStore.get(coversionString)\n            })\n    }\n}","\n\n\n//API\n// export const API_URL = 'http://localhost:3000/'\nexport const API_URL = 'https://free.currencyconverterapi.com/'\nexport const LIST_CURRENCIES_API_URL = API_URL + 'api/v5/currencies'\nexport const CONVERT_CURRENCIES_API_URL = API_URL +  'api/v5/convert'\nexport const COMPACT_QUEARY_PARAM = 'compact=ultra'\n\n//DOM IDS\nexport const FROM_CURRENCY_VALUE_INPUT_ID = 'fromCurrencyValue'\nexport const FROM_CURRENCY_SELECT_ID = 'fromCurrency'\nexport const CONVERT_BUTTON_ID = 'convert'\nexport const TO_CURRENCY_VALUE_INPUT_ID = 'toCurrencyValue'\nexport const TO_CURRENCY_SELECT_ID = 'toCurrency'\n\n\n//IDB\nexport const DATABASE_NAME = 'currencyDB'\nexport const CURRENCIES_STORE_NAME = 'currencies'\nexport const CONVERSION_RATES_STORE_NAME = 'conversionRate'\n\nexport const IDB_TRANSACTION_TYPE_READ_ONLY = 'readonly'\nexport const IDB_TRANSACTION_TYPE_READ_WRITE = 'readwrite'\n","import currencyService from './CurrencyService'\nimport { TO_CURRENCY_VALUE_INPUT_ID, FROM_CURRENCY_SELECT_ID, TO_CURRENCY_SELECT_ID, CONVERT_BUTTON_ID, FROM_CURRENCY_VALUE_INPUT_ID } from './config'\nimport domHelper from './DomHelper'\n\nfunction fetchingListOfCurrencies(){\n     //TODO: show loading screen..\n}\n\nfunction listOfCurrenciesFetched(currencies){\n    let selectOptions = {\n        data: currencies.sort((c1, c2) => c1.trim().currencyName > c2.trim().currencyName),\n        valueKey: 'id',\n        textKey: 'currencyName',\n        clearOptions: true\n    }\n\n    domHelper.populateSelectInput(domHelper.getElementById(FROM_CURRENCY_SELECT_ID), selectOptions)\n    domHelper.populateSelectInput(domHelper.getElementById(TO_CURRENCY_SELECT_ID), selectOptions)\n}\n\nfunction getListOfCurrenciesFailed(error){\n        //TODO: handle this\n        console.error(`Fetch Currency list failed b/c of error: ${error}`)\n}\n\n\nfunction registerServiceWorker(){\n    if(navigator.serviceWorker){\n        navigator.serviceWorker.register('/sw.js', {scope: '/'})\n                .then(reg => console.log(`Service worker registration successful with scope: ${reg.scope}`))\n                .catch(error => console.error(`Service worker failed with error: ${error}`));\n     }\n}\n\n//fetch list of currencies\nfunction main(){\n    fetchingListOfCurrencies();\n\n    currencyService.getListOfCurrencies()\n            .then(currencies => listOfCurrenciesFetched(currencies))\n            .catch(error => getListOfCurrenciesFailed(error));\n    \n    \n    domHelper.addOnClickEventListener(domHelper.getElementById(CONVERT_BUTTON_ID), () => {\n        let fromCurrency = domHelper.getInputValue(domHelper.getElementById(FROM_CURRENCY_SELECT_ID))\n        let toCurrency = domHelper.getInputValue(domHelper.getElementById(TO_CURRENCY_SELECT_ID))\n        let currentValue = domHelper.getInputValue(domHelper.getElementById(FROM_CURRENCY_VALUE_INPUT_ID))\n    \n        currencyService.convert(fromCurrency, toCurrency, currentValue)\n            .then(result => domHelper.setInputValue(domHelper.getElementById(TO_CURRENCY_VALUE_INPUT_ID), result))\n            .catch(error => { console.error(error);/*TODO: handle error*/})\n    })\n    \n    registerServiceWorker()\n}\n\nmain();\n"],"sourceRoot":""}