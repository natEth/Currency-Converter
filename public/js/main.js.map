{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/config.js","webpack:///./src/js/LocalStorageService.js","webpack:///./node_modules/idb/lib/idb.js","webpack:///./src/js/Currency.js","webpack:///./src/js/CurrencyService.js","webpack:///./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","API_URL","LIST_CURRENCIES_API_URL","CONVERT_CURRENCIES_API_URL","COMPACT_QUEARY_PARAM","FROM_CURRENCY_VALUE_INPUT_ID","FROM_CURRENCY_SELECT_ID","CONVERT_BUTTON_ID","TO_CURRENCY_VALUE_INPUT_ID","TO_CURRENCY_SELECT_ID","DATABASE_NAME","CURRENCIES_STORE_NAME","CONVERSION_RATES_STORE_NAME","IDB_TRANSACTION_TYPE_READ_ONLY","IDB_TRANSACTION_TYPE_READ_WRITE","_config","dbPromise","LocalStorageService","idb","open","upgradeDB","oldVersion","createObjectStore","currency","then","db","tx","transaction","objectStore","put","id","complete","this","handleDbPromiseNotInitalizedError","getAll","coversionString","conversionRate","conversionStore","conversionDbObject","dateCreated","Date","rate","errorMessage","console","error","Promise","resolve","reject","promisifyRequest","request","onsuccess","result","onerror","promisifyRequestCall","obj","method","args","apply","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Cursor","promisifyCursorRequestCall","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","replace","arr","Array","slice","toArray","callback","length","nativeObject","query","count","instance","items","iterateCursor","push","undefined","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","default","Currency","currencySymbol","currencyName","_classCallCheck","CurrencyService","_this","localStorageService","getAllCurrencies","currencies","fetchCurrenciesFromRemote","fetch","fetchResponse","json","results","values","saveCurrency","fromCurrency","toCurrency","currentValue","_this2","conversionQuery","reverseConversionQuery","findConversionRate","getTime","convertCurrenciesFromRemote","requestUrl","response","saveConversionRate","getElementById","document","getInputValue","element","populateSelectInput","data","optionName","valueName","datum","opt","type","createElement","innerHTML","appendChild","initalize","currencyService","getListOfCurrencies","listOfCurrenciesFetched","catch","getListOfCurrenciesFailed","listener","onclick","addOnClickEventListener","convert","setInputValue","navigator","serviceWorker","register","scope","reg","log"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mFC7EO,IAAMC,YAAU,yCACVC,0BAA0BD,EAAU,oBACpCE,6BAA6BF,EAAW,iBACxCG,uBAAuB,gBAGvBC,+BAA+B,oBAC/BC,0BAA0B,eAC1BC,oBAAoB,UACpBC,6BAA6B,kBAC7BC,wBAAwB,aAIxBC,gBAAgB,aAChBC,wBAAwB,aACxBC,8BAA8B,iBAE9BC,iCAAiC,WACjCC,kCAAkC,wYCxB/CjD,EAAA,IACAkD,EAAAlD,EAAA,GAGA,IAAImD,SAEiBC,mLAYb,OARCD,EAAYE,UAAIC,KAAKT,gBAAe,EAAG,SAAAU,GACpC,OAAQA,EAAUC,YAChB,KAAK,EACHD,EAAUE,kBAAkBX,yBAC5BS,EAAUE,kBAAkBV,uEAOpBW,GAChB,OAAIP,EAEGA,EAAUQ,KAAK,SAAAC,GACd,IAAIC,EAAKD,EAAGE,YAAYhB,wBAAuBG,mCAG/C,OAFoBY,EAAGE,YAAYjB,yBACrBkB,IAAIN,EAAUA,EAASO,IAC9BJ,EAAGK,WANIC,KAAKC,+EAW3B,OAAIjB,GAAeA,EAEZA,EAAUQ,KAAK,SAAAC,GAGlB,OAFSA,EAAGE,YAAYhB,wBAAuBE,kCACxBe,YAAYjB,yBACduB,WALYF,KAAKC,+EASpBE,EAAiBC,GAEvC,OAAIpB,EAEGA,EAAUQ,KAAK,SAAAC,GACd,IAAIC,EAAKD,EAAGE,YAAYf,8BAA6BE,mCACjDuB,EAAkBX,EAAGE,YAAYhB,+BAEjC0B,GAAsBC,YAAa,IAAIC,KAAQC,KAAML,EAAgBN,GAAIK,GAG7E,OAFAE,EAAgBR,IAAIS,EAAoBA,EAAmBR,IAEpDJ,EAAGK,WATIC,KAAKC,+EAaLE,GACtB,OAAInB,EAEGA,EAAUQ,KAAK,SAAAC,GAId,OAHSA,EAAGE,YAAYf,8BAA6BC,kCAC5Be,YAAYhB,+BAEd9B,IAAIqD,KANbH,KAAKC,gGAY3B,IAAIS,EAAe,yEAGnB,OAFAC,QAAQC,MAAMF,GAEP,IAAIG,QAAQ,SAACC,EAASC,GAAV,OAAqBA,EAAOL,wBAnElCzB,iCCJrB,WAKA,SAAA+B,EAAAC,GACA,WAAAJ,QAAA,SAAAC,EAAAC,GACAE,EAAAC,UAAA,WACAJ,EAAAG,EAAAE,SAGAF,EAAAG,QAAA,WACAL,EAAAE,EAAAL,UAKA,SAAAS,EAAAC,EAAAC,EAAAC,GACA,IAAAP,EACAlD,EAAA,IAAA8C,QAAA,SAAAC,EAAAC,GAEAC,EADAC,EAAAK,EAAAC,GAAAE,MAAAH,EAAAE,IACAhC,KAAAsB,EAAAC,KAIA,OADAhD,EAAAkD,UACAlD,EAWA,SAAA2D,EAAAC,EAAAC,EAAAC,GACAA,EAAAC,QAAA,SAAAC,GACApF,OAAAC,eAAA+E,EAAA9D,UAAAkE,GACAjF,IAAA,WACA,OAAAkD,KAAA4B,GAAAG,IAEAC,IAAA,SAAAC,GACAjC,KAAA4B,GAAAG,GAAAE,OAMA,SAAAC,EAAAP,EAAAC,EAAAO,EAAAN,GACAA,EAAAC,QAAA,SAAAC,GACAA,KAAAI,EAAAtE,YACA8D,EAAA9D,UAAAkE,GAAA,WACA,OAAAV,EAAArB,KAAA4B,GAAAG,EAAAK,eAKA,SAAAC,EAAAV,EAAAC,EAAAO,EAAAN,GACAA,EAAAC,QAAA,SAAAC,GACAA,KAAAI,EAAAtE,YACA8D,EAAA9D,UAAAkE,GAAA,WACA,OAAA/B,KAAA4B,GAAAG,GAAAN,MAAAzB,KAAA4B,GAAAQ,eAKA,SAAAE,EAAAX,EAAAC,EAAAO,EAAAN,GACAA,EAAAC,QAAA,SAAAC,GACAA,KAAAI,EAAAtE,YACA8D,EAAA9D,UAAAkE,GAAA,WACA,OA3CA,SAAAT,EAAAC,EAAAC,GACA,IAAAzD,EAAAsD,EAAAC,EAAAC,EAAAC,GACA,OAAAzD,EAAAyB,KAAA,SAAAtC,GACA,GAAAA,EACA,WAAAqF,EAAArF,EAAAa,EAAAkD,WAuCAuB,CAAAxC,KAAA4B,GAAAG,EAAAK,eAKA,SAAAK,EAAAC,GACA1C,KAAA2C,OAAAD,EAuBA,SAAAH,EAAAK,EAAA3B,GACAjB,KAAA6C,QAAAD,EACA5C,KAAA8C,SAAA7B,EA+BA,SAAA8B,EAAAC,GACAhD,KAAAiD,OAAAD,EAuCA,SAAAE,EAAAC,GACAnD,KAAAoD,IAAAD,EACAnD,KAAAD,SAAA,IAAAc,QAAA,SAAAC,EAAAC,GACAoC,EAAAE,WAAA,WACAvC,KAEAqC,EAAA/B,QAAA,WACAL,EAAAoC,EAAAvC,QAEAuC,EAAAG,QAAA,WACAvC,EAAAoC,EAAAvC,UAkBA,SAAA2C,EAAA9D,EAAAJ,EAAAM,GACAK,KAAAwD,IAAA/D,EACAO,KAAAX,aACAW,KAAAL,YAAA,IAAAuD,EAAAvD,GAkBA,SAAA8D,EAAAhE,GACAO,KAAAwD,IAAA/D,EA/IAiC,EAAAe,EAAA,UACA,OACA,UACA,aACA,WAGAP,EAAAO,EAAA,SAAAiB,UACA,MACA,SACA,SACA,aACA,UAGApB,EAAAG,EAAA,SAAAiB,UACA,aACA,kBAQAhC,EAAAa,EAAA,WACA,YACA,MACA,aACA,UAGAL,EAAAK,EAAA,UAAAoB,WACA,SACA,YAIA,2CAAA7B,QAAA,SAAA8B,GACAA,KAAAD,UAAA9F,YACA0E,EAAA1E,UAAA+F,GAAA,WACA,IAAAhB,EAAA5C,KACAwB,EAAAY,UACA,OAAAvB,QAAAC,UAAAtB,KAAA,WAEA,OADAoD,EAAAC,QAAAe,GAAAnC,MAAAmB,EAAAC,QAAArB,GACAR,EAAA4B,EAAAE,UAAAtD,KAAA,SAAAtC,GACA,GAAAA,EACA,WAAAqF,EAAArF,EAAA0F,EAAAE,kBAUAC,EAAAlF,UAAAgG,YAAA,WACA,WAAApB,EAAAzC,KAAAiD,OAAAY,YAAApC,MAAAzB,KAAAiD,OAAAb,aAGAW,EAAAlF,UAAA6E,MAAA,WACA,WAAAD,EAAAzC,KAAAiD,OAAAP,MAAAjB,MAAAzB,KAAAiD,OAAAb,aAGAV,EAAAqB,EAAA,UACA,OACA,UACA,aACA,kBAGAb,EAAAa,EAAA,SAAAe,gBACA,MACA,MACA,SACA,QACA,MACA,SACA,SACA,aACA,UAGAxB,EAAAS,EAAA,SAAAe,gBACA,aACA,kBAGAzB,EAAAU,EAAA,SAAAe,gBACA,gBAkBAZ,EAAArF,UAAA+B,YAAA,WACA,WAAAmD,EAAA/C,KAAAoD,IAAAxD,YAAA6B,MAAAzB,KAAAoD,IAAAhB,aAGAV,EAAAwB,EAAA,OACA,mBACA,SAGAb,EAAAa,EAAA,MAAAa,gBACA,UASAR,EAAA1F,UAAAyB,kBAAA,WACA,WAAAyD,EAAA/C,KAAAwD,IAAAlE,kBAAAmC,MAAAzB,KAAAwD,IAAApB,aAGAV,EAAA6B,EAAA,OACA,OACA,UACA,qBAGAlB,EAAAkB,EAAA,MAAAS,aACA,oBACA,UAOAP,EAAA5F,UAAA8B,YAAA,WACA,WAAAuD,EAAAlD,KAAAwD,IAAA7D,YAAA8B,MAAAzB,KAAAwD,IAAApB,aAGAV,EAAA+B,EAAA,OACA,OACA,UACA,qBAGApB,EAAAoB,EAAA,MAAAO,aACA,WAKA,8BAAAlC,QAAA,SAAAmC,IACAlB,EAAAN,GAAAX,QAAA,SAAAK,GAEA8B,KAAA9B,EAAAtE,YAEAsE,EAAAtE,UAAAoG,EAAAC,QAAA,8BACA,IAAA1C,EAvPA,SAAA2C,GACA,OAAAC,MAAAvG,UAAAwG,MAAAjI,KAAA+H,GAsPAG,CAAAlC,WACAmC,EAAA/C,IAAAgD,OAAA,GACAC,EAAAzE,KAAAiD,QAAAjD,KAAA2C,OACA1B,EAAAwD,EAAAR,GAAAxC,MAAAgD,EAAAjD,EAAA6C,MAAA,OACApD,EAAAC,UAAA,WACAqD,EAAAtD,EAAAE,gBAOAsB,EAAAM,GAAAjB,QAAA,SAAAK,GACAA,EAAAtE,UAAAqC,SACAiC,EAAAtE,UAAAqC,OAAA,SAAAwE,EAAAC,GACA,IAAAC,EAAA5E,KACA6E,KAEA,WAAAhE,QAAA,SAAAC,GACA8D,EAAAE,cAAAJ,EAAA,SAAA9B,GACAA,GAIAiC,EAAAE,KAAAnC,EAAA1F,YAEA8H,IAAAL,GAAAE,EAAAL,QAAAG,EAIA/B,EAAAqC,WAHAnE,EAAA+D,IANA/D,EAAA+D,WAeA,IAAAK,GACA/F,KAAA,SAAA3C,EAAA2I,EAAAC,GACA,IAAArH,EAAAsD,EAAAgE,UAAA,QAAA7I,EAAA2I,IACAlE,EAAAlD,EAAAkD,QAUA,OARAA,IACAA,EAAAqE,gBAAA,SAAAC,GACAH,GACAA,EAAA,IAAA7B,EAAAtC,EAAAE,OAAAoE,EAAAlG,WAAA4B,EAAAtB,gBAKA5B,EAAAyB,KAAA,SAAAC,GACA,WAAAgE,EAAAhE,MAGA+F,OAAA,SAAAhJ,GACA,OAAA6E,EAAAgE,UAAA,kBAAA7I,MAKAR,EAAAD,QAAAmJ,EACAlJ,EAAAD,QAAA0J,QAAAzJ,EAAAD,QApTA,4FCDI,SAAA2J,EAAY5F,EAAI6F,EAAgBC,gGAAaC,CAAA7F,KAAA0F,GACzC1F,KAAKF,GAAKA,EACVE,KAAK2F,eAAiBA,EACtB3F,KAAK4F,aAAeA,2UCJ5B7G,EAAAlD,EAAA,OACAA,EAAA,QACAA,EAAA,uDAGA,IAEqBiK,6LAEW,IAAAC,EAAA/F,KACxB,OAAOgG,UAAoBC,mBAAmBzG,KAAK,SAAA0G,GAC/C,OAAGA,GAAc,IAAMA,EAAW1B,OACvB,IAAI3D,QAAQ,SAAAC,GAAA,OAAWA,EAAQoF,KAEnCH,EAAKI,kFAKhB,OAAOC,MAAMlI,2BACAsB,KAAK,SAAC6G,GAAD,OAAoBA,EAAcC,SACvC9G,KAAK,SAAA8G,GACF,IAAIC,KAQJ,OANA5J,OAAO6J,OAAOF,EAAKC,SAASzE,QAAQ,SAAC5E,GAEjC,IAAIqC,EAAW,IAAImG,UAASxI,EAAM4C,GAAI5C,EAAMyI,eAAgBzI,EAAM0I,cAClEI,UAAoBS,aAAalH,GACjCgH,EAAQxB,KAAKxF,KAEVgH,oCAIZG,EAAcC,EAAYC,GAAa,IAAAC,EAAA7G,KAE9C8G,EAAqBJ,EAArB,IAAqCC,EACrCI,EAA4BJ,EAA5B,IAA0CD,EAE9C,OAAOV,UAAoBgB,mBAAmBF,GAAiBtH,KAAK,SAAAD,GAE5D,OAAGA,IAAa,IAAIiB,MAAOyG,UAAY1H,EAASgB,YApCzC,KAqCIhB,EAASkB,KAAOmG,EAEpBC,EAAKK,4BAA4BJ,EAAiBC,EAAwBH,yDAK1DE,EAAiBC,EAAwBH,GACxE,IAAIO,EAAgBhJ,6BAAhB,MAAgD2I,EAAhD,IAAmEC,EAAnE,IAA6F3I,uBAEjG,OAAOgI,MAAMe,GACJ3H,KAAK,SAAA4H,GAAA,OAAYA,EAASd,SAC1B9G,KAAK,SAAA8G,GAKF,OAJAN,UAAoBqB,mBAAmBP,EAAiBR,EAAKQ,IAC7Dd,UAAoBqB,mBAAmBN,EAAwBT,EAAKS,IAEvDT,EAAKQ,GACFF,uBApDfd,gCCPrB,QAAAjK,EAAA,IACAkD,EAAAlD,EAAA,sDAIA,SAASyL,EAAexH,GACpB,OAAOyH,SAASD,eAAexH,GAWnC,SAAS0H,EAAcC,GACnB,OAAOA,EAAQvK,MAOnB,SAASwK,EAAoBD,EAASE,EAAMC,EAAYC,GACpDlL,OAAO6J,OAAOmB,GAAM7F,QAAQ,SAACgG,GACzB,IAAIC,EAlBZ,SAAuBC,GACnB,OAAOT,SAASU,cAAcD,GAiBhBC,CAAc,UACxBF,EAAI7K,MAAQ4K,EAAMF,GAClBG,EAAIG,UAAYJ,EAAMD,GACtBJ,EAAQU,YAAYJ,OA5B5BlM,EAAA,IA2DImK,QAAoBoC,YAIpBC,UAAgBC,sBACP9I,KAAK,SAAA0G,GAAA,OA1BlB,SAAiCA,GAC7BwB,EAAoBJ,EAAehJ,2BAA0B4H,EAAY,KAAM,gBAC/EwB,EAAoBJ,EAAe7I,yBAAwByH,EAAY,KAAM,gBAwBjDqC,CAAwBrC,KAC3CsC,MAAM,SAAA5H,GAAA,OAtBnB,SAAmCA,GAE3BD,QAAQC,MAAR,4CAA0DA,GAoBtC6H,CAA0B7H,KAtDtD,SAAiC6G,EAASiB,GACtCjB,EAAQkB,QAAUD,EAwDlBE,CAAwBtB,EAAe/I,qBAAoB,WACvD,IAAImI,EAAec,EAAcF,EAAehJ,4BAC5CqI,EAAaa,EAAcF,EAAe7I,0BAC1CmI,EAAeY,EAAcF,EAAejJ,iCAEhDgK,UAAgBQ,QAAQnC,EAAcC,EAAYC,GAC7CpH,KAAK,SAAA2B,GAAA,OAvDlB,SAAuBsG,EAASvK,GAC5BuK,EAAQvK,MAAQA,EAsDQ4L,CAAcxB,EAAe9I,8BAA6B2C,KACzEqH,MAAM,SAAA5H,GAAWD,QAAQC,MAAMA,OAzBrCmI,UAAUC,eACTD,UAAUC,cAAcC,SAAS,UAAWC,MAAO,MAC1C1J,KAAK,SAAA2J,GAAA,OAAOxI,QAAQyI,IAAR,sDAAkED,EAAID,SAClFV,MAAM,SAAA5H,GAAA,OAASD,QAAQC,MAAR,qCAAmDA","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","\n\n\n//API\n// export const API_URL = 'http://localhost:3000/'\nexport const API_URL = 'https://free.currencyconverterapi.com/'\nexport const LIST_CURRENCIES_API_URL = API_URL + 'api/v5/currencies'\nexport const CONVERT_CURRENCIES_API_URL = API_URL +  'api/v5/convert'\nexport const COMPACT_QUEARY_PARAM = 'compact=ultra'\n\n//DOM IDS\nexport const FROM_CURRENCY_VALUE_INPUT_ID = 'fromCurrencyValue'\nexport const FROM_CURRENCY_SELECT_ID = 'fromCurrency'\nexport const CONVERT_BUTTON_ID = 'convert'\nexport const TO_CURRENCY_VALUE_INPUT_ID = 'toCurrencyValue'\nexport const TO_CURRENCY_SELECT_ID = 'toCurrency'\n\n\n//IDB\nexport const DATABASE_NAME = 'currencyDB'\nexport const CURRENCIES_STORE_NAME = 'currencies'\nexport const CONVERSION_RATES_STORE_NAME = 'conversionRate'\n\nexport const IDB_TRANSACTION_TYPE_READ_ONLY = 'readonly'\nexport const IDB_TRANSACTION_TYPE_READ_WRITE = 'readwrite'\n","import idb from 'idb';\nimport {DATABASE_NAME, CURRENCIES_STORE_NAME, CONVERSION_RATES_STORE_NAME,\n        IDB_TRANSACTION_TYPE_READ_WRITE, IDB_TRANSACTION_TYPE_READ_ONLY } from './config';\n\nlet dbPromise\n\nexport default class LocalStorageService {\n    \n    static initalize(){\n        //FIXME: this certainly doesn't seem like a good approach keeping the db open\n         dbPromise = idb.open(DATABASE_NAME, 1, upgradeDB => {\n            switch (upgradeDB.oldVersion) {\n              case 0:\n                upgradeDB.createObjectStore(CURRENCIES_STORE_NAME);\n                upgradeDB.createObjectStore(CONVERSION_RATES_STORE_NAME);\n            }\n          })\n\n        return dbPromise;\n    }\n\n    static saveCurrency(currency){\n        if(!dbPromise) return this.handleDbPromiseNotInitalizedError()\n        \n        return dbPromise.then(db => {\n                let tx = db.transaction(CURRENCIES_STORE_NAME, IDB_TRANSACTION_TYPE_READ_WRITE)\n                let currencyStore = tx.objectStore(CURRENCIES_STORE_NAME)\n                currencyStore.put(currency, currency.id)\n                return tx.complete\n            })\n    }\n\n    static getAllCurrencies(){\n        if(!dbPromise) if(!dbPromise) return this.handleDbPromiseNotInitalizedError()\n\n        return dbPromise.then(db => {\n            let tx = db.transaction(CURRENCIES_STORE_NAME, IDB_TRANSACTION_TYPE_READ_ONLY)\n            let currencyStore = tx.objectStore(CURRENCIES_STORE_NAME)\n            return currencyStore.getAll();\n        })\n    }\n\n    static saveConversionRate(coversionString, conversionRate){\n        \n        if(!dbPromise) return this.handleDbPromiseNotInitalizedError()\n\n        return dbPromise.then(db => {\n                let tx = db.transaction(CONVERSION_RATES_STORE_NAME, IDB_TRANSACTION_TYPE_READ_WRITE)\n                let conversionStore = tx.objectStore(CONVERSION_RATES_STORE_NAME)\n\n                let conversionDbObject = {dateCreated: new Date(), rate: conversionRate, id: coversionString}\n                conversionStore.put(conversionDbObject, conversionDbObject.id)\n\n                return tx.complete\n            })\n    }\n\n    static findConversionRate(coversionString){\n        if(!dbPromise) return this.handleDbPromiseNotInitalizedError()\n\n        return dbPromise.then(db => {\n                let tx = db.transaction(CONVERSION_RATES_STORE_NAME, IDB_TRANSACTION_TYPE_READ_ONLY)\n                let conversionStore = tx.objectStore(CONVERSION_RATES_STORE_NAME)\n\n                return conversionStore.get(coversionString)\n            })\n    }\n\n    static handleDbPromiseNotInitalizedError(){\n        \n        let errorMessage = 'LocalStorageService.initalize should be called before any db operation'\n        console.error(errorMessage);\n        //TODO: is it the best apporach\n        return new Promise((resolve, reject) => reject(errorMessage))\n    }\n}","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","export default class Currency {\n    constructor(id, currencySymbol, currencyName){\n        this.id = id;\n        this.currencySymbol = currencySymbol;\n        this.currencyName = currencyName;\n    }\n}","import { LIST_CURRENCIES_API_URL, CONVERT_CURRENCIES_API_URL, COMPACT_QUEARY_PARAM } from './config';\nimport Currency from './Currency';\nimport localStorageService from './LocalStorageService';\n\n\nconst ONE_HOUR_IN_MS = 60 * 60 * 1000;\n\nexport default class CurrencyService {\n    \n    static getListOfCurrencies(){\n        return localStorageService.getAllCurrencies().then(currencies => {\n            if(currencies && 0 !== currencies.length)\n                return new Promise(resolve => resolve(currencies)) //TODO: again is this the best way to do this\n\n            return this.fetchCurrenciesFromRemote()\n        })\n    }\n\n    static fetchCurrenciesFromRemote(){\n        return fetch(LIST_CURRENCIES_API_URL)\n                    .then((fetchResponse) =>  fetchResponse.json())\n                    .then(json => {\n                        let results = []\n                        \n                        Object.values(json.results).forEach((value) => {\n                            //TODO: find out if this is the best way to pass currencies (we could pass them as is)\n                            let currency = new Currency(value.id, value.currencySymbol, value.currencyName);\n                            localStorageService.saveCurrency(currency);\n                            results.push(currency);\n                        })\n                        return results;\n                    });\n    }\n\n    static convert(fromCurrency, toCurrency, currentValue){\n       \n        let conversionQuery = `${fromCurrency}_${toCurrency}`\n        let reverseConversionQuery = `${toCurrency}_${fromCurrency}`\n        \n        return localStorageService.findConversionRate(conversionQuery).then(currency =>{\n                //b/c the server refreshes prices every one hour\n                if(currency && (new Date().getTime() - currency.dateCreated) < ONE_HOUR_IN_MS)\n                    return currency.rate * currentValue\n                 \n                return this.convertCurrenciesFromRemote(conversionQuery, reverseConversionQuery, currentValue)\n        })\n\n    }\n\n    static convertCurrenciesFromRemote(conversionQuery, reverseConversionQuery, currentValue){\n        let requestUrl = `${CONVERT_CURRENCIES_API_URL}?q=${conversionQuery},${reverseConversionQuery}&${COMPACT_QUEARY_PARAM}`\n\n        return fetch(requestUrl)\n                .then(response => response.json())\n                .then(json => {\n                    localStorageService.saveConversionRate(conversionQuery, json[conversionQuery])\n                    localStorageService.saveConversionRate(reverseConversionQuery, json[reverseConversionQuery])\n\n                    let result = json[conversionQuery]\n                    return result * currentValue\n                })\n    }\n}","import currencyService from './CurrencyService'\nimport { TO_CURRENCY_VALUE_INPUT_ID, FROM_CURRENCY_SELECT_ID, TO_CURRENCY_SELECT_ID, CONVERT_BUTTON_ID, FROM_CURRENCY_VALUE_INPUT_ID } from './config'\nimport localStorageService from './LocalStorageService';\n\n//TODO: START: abastract out to dom related class\nfunction getElementById(id){\n    return document.getElementById(id);\n}\n\nfunction createElement(type){\n    return document.createElement(type);\n}\n\nfunction addOnClickEventListener(element, listener){\n    element.onclick = listener\n}\n\nfunction getInputValue(element){\n    return element.value\n}\n\nfunction setInputValue(element, value){\n    element.value = value\n}\n\nfunction populateSelectInput(element, data, optionName, valueName){\n    Object.values(data).forEach((datum) => {\n        var opt = createElement('option');\n        opt.value = datum[optionName];\n        opt.innerHTML = datum[valueName];\n        element.appendChild(opt);\n    })\n}\n\n//END: abastract out to dom related class\n\nfunction fetchingListOfCurrencies(){\n     //TODO: show loading screen..\n}\n\nfunction listOfCurrenciesFetched(currencies){\n    populateSelectInput(getElementById(FROM_CURRENCY_SELECT_ID), currencies, 'id', 'currencyName')\n    populateSelectInput(getElementById(TO_CURRENCY_SELECT_ID), currencies, 'id', 'currencyName')\n}\n\nfunction getListOfCurrenciesFailed(error){\n        //TODO: handle this\n        console.error(`Fetch Currency list failed b/c of error: ${error}`)\n}\n\n\nfunction registerServiceWorker(){\n    if(navigator.serviceWorker){\n        navigator.serviceWorker.register('/sw.js', {scope: '/'})\n                .then(reg => console.log(`Service worker registration successful with scope: ${reg.scope}`))\n                .catch(error => console.error(`Service worker failed with error: ${error}`));\n     }\n}\n\n//fetch list of currencies\nfunction main(){\n    localStorageService.initalize()\n    \n    fetchingListOfCurrencies();\n\n    currencyService.getListOfCurrencies()\n            .then(currencies => listOfCurrenciesFetched(currencies))\n            .catch(error => getListOfCurrenciesFailed(error));\n    \n    \n    addOnClickEventListener(getElementById(CONVERT_BUTTON_ID), () => {\n        let fromCurrency = getInputValue(getElementById(FROM_CURRENCY_SELECT_ID))\n        let toCurrency = getInputValue(getElementById(TO_CURRENCY_SELECT_ID))\n        let currentValue = getInputValue(getElementById(FROM_CURRENCY_VALUE_INPUT_ID))\n    \n        currencyService.convert(fromCurrency, toCurrency, currentValue)\n            .then(result => setInputValue(getElementById(TO_CURRENCY_VALUE_INPUT_ID), result))\n            .catch(error => { console.error(error);/*TODO: handle error*/})\n    })\n    \n    registerServiceWorker()\n}\n\nmain();\n"],"sourceRoot":""}